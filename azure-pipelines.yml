# CI for wxPython Phoenix on Azure DevOps

trigger: ['master', 'wxPy-4.0.x']

jobs:

- job: Linux
  displayName: Linux
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 4

  variables: {'PYTHONUNBUFFERED': '1'}

  steps:
  - checkout: self
    submodules: recursive

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      sudo apt-get update
      sudo apt-get install -y build-essential
      sudo apt-get install -y libgtk2.0-dev libgtk-3-dev \
          libjpeg-dev libtiff-dev \
          libsdl1.2-dev libgstreamer-plugins-base0.10-dev \
          libgstreamer-plugins-base1.0-dev \
          libnotify-dev freeglut3 freeglut3-dev libsm-dev \
          libwebkitgtk-dev libwebkitgtk-3.0-dev


  - script: |
      python --version 
      python -m pip install --upgrade pip 
      python -m pip install -r requirements.txt
    displayName: 'Install Python dependencies'

  - script: |
      python build.py --jobs=4 dox build_wx
    displayName: 'build wxWidgets'

  - script: |
      python build.py --jobs=4 etg --nodoc sip build_py
    displayName: 'build wxPython'

  - script: |
      python build.py bdist_wheel
      python build.py install
      python -c "import wx; print(wx.version());"
    displayName: 'build wheel and test install'

  # - script: |
  #     pip install pytest
  #     pytest tests --doctest-modules --junitxml=junit/test-results.xml
  #   displayName: 'pytest'

  # - task: PublishTestResults@2
  #   inputs:
  #     testResultsFiles: '**/test-results.xml'
  #     testRunTitle: 'Python $(python.version)'
  #   condition: succeededOrFailed()

# - job: 'Publish'
#   dependsOn: 'Test'
#   pool:
#     vmImage: 'Ubuntu 16.04'

#   steps:
#   - task: UsePythonVersion@0
#     inputs:
#       versionSpec: '3.x'
#       architecture: 'x64'

#   - script: python setup.py sdist
#     displayName: 'Build sdist'
