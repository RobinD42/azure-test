# CI for wxPython Phoenix on Azure DevOps


# CI triggers default to all branches so I don't think we need these...
#trigger: 
#  branches:
#    include:
#    - master
#    - wxPy-4.0.x


jobs:

- job: MacOS
  displayName: 'MacOS Build'
  pool:
    vmImage: 'macOS-10.13'
  strategy:
    matrix: 
      Python27:
        python_version: '2.7.15'
        python_pkg: 'python-2.7.15-macosx10.9.pkg'
        python: 'python2.7'
      Python36:
        python_version: '3.6.6'
        python_pkg: 'python-3.6.6-macosx10.9.pkg'
        python: 'python3.6'
      Python37:
        python_version: '3.7.0'
        python_pkg: 'python-3.7.0-macosx10.9.pkg'
        python: 'python3.7'
    maxParallel: 3


  variables: {'PYTHONUNBUFFERED': '1'}

  steps:
  - checkout: self
    submodules: recursive

  - script: |
      curl -O https://www.python.org/ftp/python/$PYTHON_VERSION/$PYTHON_PKG
      sudo installer -pkg $PYTHON_PKG -target /
      which $PYTHON
      $PYTHON --version
    displayName: 'Fetch Python'

  - script: |
      curl -O https://bootstrap.pypa.io/get-pip.py
      $PYTHON get-pip.py
      $PYTHON -m pip install setuptools wheel 
      $PYTHON -m pip install -r requirements.txt
    displayName: 'Install Python dependencies'

  - script: |
      #sudo xcode-select -s /Applications/Xcode_9.4.1.app/Contents/Developer
      #xcode-select -p
      $PYTHON build.py --jobs=4 build_wx
    displayName: 'build wxWidgets'

  - script: |
      $PYTHON build.py dox etg --nodoc sip
      $PYTHON build.py --jobs=4 build_py
    displayName: 'build wxPython'

  - script: |
      $PYTHON build.py bdist_wheel
      sudo $PYTHON build.py install
      $PYTHON -c "import wx; print(wx.version());"
    displayName: 'build wheel and test install'



- job: Linux
  displayName: 'Linux Build'
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
    matrix: 
      Python27:
        python_version: '2.7.15'
        python: 'python2.7'
      Python36:
        python_version: '3.6.6'
        python: 'python3.6'
      Python37:
        python_version: '3.7.0'
        python: 'python3.7'
    maxParallel: 3

  variables: {'PYTHONUNBUFFERED': '1'}

  steps:
  - checkout: self
    submodules: recursive

  - script: |
      sudo add-apt-repository ppa:deadsnakes/ppa
      sudo apt-get update
      sudo apt-get install -y build-essential
      echo "=-=-=-=-" sudo apt-get install -y $PYTHON ${PYTHON}-dev lib${PYTHON}-dev
      sudo apt-get install -y $PYTHON ${PYTHON}-dev lib${PYTHON}-dev
      sudo apt-get install -y libgtk2.0-dev libgtk-3-dev \
          libjpeg-dev libtiff-dev \
          libsdl1.2-dev libgstreamer-plugins-base0.10-dev \
          libgstreamer-plugins-base1.0-dev \
          libnotify-dev freeglut3 freeglut3-dev libsm-dev \
          libwebkitgtk-dev libwebkitgtk-3.0-dev
    displayName: 'Install deb package requirements'

  - script: |
      $PYTHON --version 
      curl -O https://bootstrap.pypa.io/get-pip.py
      $PYTHON get-pip.py
      $PYTHON -m pip install setuptools wheel 
      $PYTHON -m pip install -r requirements.txt
    displayName: 'Install Python dependencies'

  - script: |
      $PYTHON build.py --jobs=4 dox build_wx
    displayName: 'build wxWidgets'

  - script: |
      $PYTHON build.py --jobs=4 etg --nodoc sip build_py
    displayName: 'build wxPython'

  - script: |
      $PYTHON build.py bdist_wheel
      sudo $PYTHON build.py install
      $PYTHON -c "import wx; print(wx.version());"
    displayName: 'build wheel and test install'



  # - script: |
  #     pip install pytest
  #     pytest tests --doctest-modules --junitxml=junit/test-results.xml
  #   displayName: 'pytest'

  # - task: PublishTestResults@2
  #   inputs:
  #     testResultsFiles: '**/test-results.xml'
  #     testRunTitle: 'Python $(python.version)'
  #   condition: succeededOrFailed()

# - job: 'Publish'
#   dependsOn: 'Test'
#   pool:
#     vmImage: 'Ubuntu 16.04'

#   steps:
#   - task: UsePythonVersion@0
#     inputs:
#       versionSpec: '3.x'
#       architecture: 'x64'

#   - script: python setup.py sdist
#     displayName: 'Build sdist'
